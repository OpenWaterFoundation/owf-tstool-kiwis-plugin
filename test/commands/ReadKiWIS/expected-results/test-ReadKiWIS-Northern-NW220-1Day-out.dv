# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 14.5.3 (2023-01-10)
# user:         steve
# date:         Thu Jan 19 03:21:43 America/Denver 2023
# host:         blue
# directory:    D:\Users\steve\cdss-dev\TSTool\git-repos\owf-tstool-kiwis-plugin\test\commands\ReadKiWIS
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "D:\Users\steve\cdss-dev\TSTool\git-repos\owf-tstool-kiwis-plugin\test\commands\ReadKiWIS\test-ReadKiWIS-Northern-NW220-1Day.tstool"
# Commands: 
# # Test reading a KiWIS time series
# # - read a single daily time series
# # - set the period so that results are predictable
# # - use data from Northern Water system
# StartLog(LogFile="Results/test-ReadKiWIS-Northern-NW220-1Day.tstool.log")
# # Read the full period.
# SetInputPeriod(InputStart="2022-01-01",InputEnd="2022-01-15")
# ReadKiWIS(DataStore="KiWIS-northern",DataType="rhum_vais_Avg",Interval="1Day",LocId="NW220",TsShortName="Day.Mean")
# # Uncomment the following to write the expected results.
# WriteDateValue(OutputFile="expected-results/test-ReadKiWIS-Northern-NW220-1Day-out.dv")
# WriteDateValue(OutputFile="results/test-ReadKiWIS-Northern-NW220-1Day-out.dv")
# # Compare the results with expected results.
# CompareFiles(InputFile1="expected-results/test-ReadKiWIS-Northern-NW220-1Day-out.dv",InputFile2="results/test-ReadKiWIS-Northern-NW220-1Day-out.dv",IfDifferent=Warn)
# # Read the data using WebGet to visually confirm the results.
# WebGet(URI="https://data.northernwater.org/KiWIS/KiWIS?datasource=0&service=kisters&type=queryServices&request=getTimeseriesValues&format=csv&ts_id=25099010&returnfields=Timestamp%2CValue%2CQuality+Code%2CInterpolation+Type&from=2022-01-01+00%3A00&to=2022-01-15+00%3A00",EncodeURI=False,LocalFile="results/test-ReadKiWIS-Northern-NW220-1Day.csv")
# ReadTableFromDelimitedFile(TableID="WebGetTable",InputFile="results/test-ReadKiWIS-Northern-NW220-1Day.csv",Delimiter=";",ColumnNames="Timestamp,Value,Quality Code,Interpolation Type")
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20220330 on localhost\CDSS
# HydroBase.db_version:  design version: 20220330  last data change: 20220330
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20220928 on localhost\CDSS
# HydroBase.db_version:  design version: 20220811  last data change: 20220928
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 1
TSID        = "NW220.KiWIS.rhum_vais_Avg-'Day.Mean'.1Day"
Alias       = ""
Description = "Berthoud"
DataType    = "rhum_vais_Avg-'Day.Mean'"
Units       = "%"
MissingVal  = NaN
DataFlags   = true
Start       = 2021-12-31
End         = 2022-01-14
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=NW220.KiWIS.rhum_vais_Avg-'Day.Mean'.1Day Alias=):
#
#   Created new time series with interval determined from TSID "NW220.KiWIS.rhum_vais_Avg-'Day.Mean'.1Day".
#
#EndHeader
Date "NW220.KiWIS.rhum_vais_Avg-'Day.Mean'.1Day, %" DataFlag
2021-12-31 79.7600 "Provisional"
2022-01-01 86.9800 "Provisional"
2022-01-02 90.7100 "Provisional"
2022-01-03 80.2000 "Provisional"
2022-01-04 42.5800 "Provisional"
2022-01-05 85.4600 "Provisional"
2022-01-06 86.3200 "Provisional"
2022-01-07 78.0600 "Provisional"
2022-01-08 65.0400 "Provisional"
2022-01-09 81.5700 "Provisional"
2022-01-10 52.3000 "Provisional"
2022-01-11 48.1000 "Provisional"
2022-01-12 52.2800 "Provisional"
2022-01-13 60.3800 "Provisional"
2022-01-14 54.1500 "Provisional"
