# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 14.5.3 (2023-01-10)
# user:         steve
# date:         Thu Jan 19 03:10:57 America/Denver 2023
# host:         blue
# directory:    D:\Users\steve\cdss-dev\TSTool\git-repos\owf-tstool-kiwis-plugin\test\commands\ReadKiWIS
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "D:\Users\steve\cdss-dev\TSTool\git-repos\owf-tstool-kiwis-plugin\test\commands\ReadKiWIS\test-ReadKiWIS-day-interval-options.tstool"
# Commands: 
# # Test reading a KiWIS time series
# # - read a single daily time series
# # - set the period so that results are predictable
# # - use data from Northern Water system
# StartLog(LogFile="Results/test-ReadKiWIS-day-interval-options.tstool.log")
# # Read the full period.
# SetInputPeriod(InputStart="2022-01-01",InputEnd="2022-03-15")
# # - the same daily interval time series is read different ways
# #
# # TSID:
# # - default behavior is to shift the hour 0 value of a day to the previous day and discard the time
# NW220.KiWIS.temp_vais_Avg-'Day.Mean'.1Day~KiWIS-northern
# #
# # ReadKiWIS command:
# # - similar to TSID, default behavior is to shift the hour 0 value of a day to the previous day and discard the time
# # - the time series alias is "default"
# ReadKiWIS(DataStore="KiWIS-northern",DataType="temp_vais_Avg",Interval="1Day",LocId="NW220",TsShortName="Day.Mean",Alias="default")
# #
# # ReadKiWIS command:
# # - read using an output interval of IrregHour
# # - the date and time of the original time series is retained as hour 0 of next day for midnight of a day
# # - the time precision is set to hour
# # - the time series alias is "IrregHour"
# ReadKiWIS(DataStore="KiWIS-northern",DataType="temp_vais_Avg",Interval="1Day",LocId="NW220",TsShortName="Day.Mean",Alias="IrregHour",IrregularInterval="IrregHour")
# # ReadKiWIS command:
# # - read daily time series but output as 24Hour interval
# # - the date and time of the original time series is retained as hour 0 of next day for midnight of a day
# # - the time precision is set to hour
# # - the time series alias is "ReadDayAs24Hour"
# ReadKiWIS(DataStore="KiWIS-northern",DataType="temp_vais_Avg",Interval="1Day",LocId="NW220",TsShortName="Day.Mean",Alias="ReadDayAs24Hour",ReadDayAs24Hour=True)
# #
# # Compare the daily time series.
# SelectTimeSeries(TSList=TSPosition,TSPosition="1-2",DeselectAllFirst=True)
# # Uncomment the following to write the expected results for hourly and day interval files.
# WriteDateValue(TSList=SelectedTS,OutputFile="expected-results/test-ReadKiWIS-day-interval-options-day-out.dv")
# WriteDateValue(TSList=SelectedTS,OutputFile="results/test-ReadKiWIS-day-interval-options-day-out.dv")
# # Compare the results with expected results.
# CompareFiles(InputFile1="expected-results/test-ReadKiWIS-day-interval-options-day-out.dv",InputFile2="results/test-ReadKiWIS-day-interval-options-day-out.dv",IfDifferent=Warn)
# #
# # Compare the irregular hour time series.
# SelectTimeSeries(TSList=TSPosition,TSPosition="3",DeselectAllFirst=True)
# # Uncomment the following to write the expected results for hourly and day interval files.
# WriteDateValue(TSList=SelectedTS,OutputFile="expected-results/test-ReadKiWIS-day-interval-options-irreghour-out.dv")
# WriteDateValue(TSList=SelectedTS,OutputFile="results/test-ReadKiWIS-day-interval-options-irreghour-out.dv")
# # Compare the results with expected results.
# CompareFiles(InputFile1="expected-results/test-ReadKiWIS-day-interval-options-irreghour-out.dv",InputFile2="results/test-ReadKiWIS-day-interval-options-irreghour-out.dv",IfDifferent=Warn)
# #
# # Compare the hourly time series.
# SelectTimeSeries(TSList=TSPosition,TSPosition="4",DeselectAllFirst=True)
# # Uncomment the following to write the expected results for hourly and day interval files.
# WriteDateValue(TSList=SelectedTS,OutputFile="expected-results/test-ReadKiWIS-day-interval-options-hour-out.dv")
# WriteDateValue(TSList=SelectedTS,OutputFile="results/test-ReadKiWIS-day-interval-options-hour-out.dv")
# # Compare the results with expected results.
# CompareFiles(InputFile1="expected-results/test-ReadKiWIS-day-interval-options-hour-out.dv",InputFile2="results/test-ReadKiWIS-day-interval-options-hour-out.dv",IfDifferent=Warn)
# #
# # The following commands read the time series values into a table to allow for comparison:
# # - see the time series properties ts.GetTimeSeriesValuesUrl property for the URL
# # - DO NOT url-encode the URL because it is already encoded
# # - even though csv format is requested, semi-colon is used as the delimiter
# WebGet(URI="https://data.northernwater.org/KiWIS/KiWIS?datasource=0&service=kisters&type=queryServices&request=getTimeseriesValues&format=csv&ts_id=1062010&returnfields=Timestamp%2CValue%2CQuality+Code%2CInterpolation+Type&period=complete",EncodeURI=False,LocalFile="results/example-day-interval-options.csv")
# ReadTableFromDelimitedFile(TableID="example-day-interval-options",InputFile="results/example-day-interval-options.csv",Delimiter=";",ColumnNames="Timestamp,Value,Quality Code,Interpolation Type")
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20220330 on localhost\CDSS
# HydroBase.db_version:  design version: 20220330  last data change: 20220330
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20220928 on localhost\CDSS
# HydroBase.db_version:  design version: 20220811  last data change: 20220928
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 2
TSID        = "NW220.KiWIS.temp_vais_Avg-'Day.Mean'.1Day" "NW220.KiWIS.temp_vais_Avg-'Day.Mean'.1Day"
Alias       = "" "default"
Description = "Berthoud" "Berthoud"
DataType    = "temp_vais_Avg-'Day.Mean'" "temp_vais_Avg-'Day.Mean'"
Units       = "°F" "°F"
MissingVal  = NaN NaN
DataFlags   = true true
Start       = 2021-12-31
End         = 2022-03-14
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=NW220.KiWIS.temp_vais_Avg-'Day.Mean'.1Day Alias=):
#
#   Created new time series with interval determined from TSID "NW220.KiWIS.temp_vais_Avg-'Day.Mean'.1Day".
#
# Creation history for time series 2 (TSID=NW220.KiWIS.temp_vais_Avg-'Day.Mean'.1Day Alias=default):
#
#   Created new time series with interval determined from TSID "NW220.KiWIS.temp_vais_Avg-'Day.Mean'.1Day".
#
#EndHeader
Date "NW220.KiWIS.temp_vais_Avg-'Day.Mean'.1Day, °F" DataFlag "default, °F" DataFlag
2021-12-31 24.5800 "Provisional" 24.5800 "Provisional"
2022-01-01 3.9500 "Provisional" 3.9500 "Provisional"
2022-01-02 16.0400 "Provisional" 16.0400 "Provisional"
2022-01-03 23.5200 "Provisional" 23.5200 "Provisional"
2022-01-04 38.0700 "Provisional" 38.0700 "Provisional"
2022-01-05 13.7800 "Provisional" 13.7800 "Provisional"
2022-01-06 3.8000 "Provisional" 3.8000 "Provisional"
2022-01-07 23.2000 "Provisional" 23.2000 "Provisional"
2022-01-08 34.0600 "Provisional" 34.0600 "Provisional"
2022-01-09 23.7600 "Provisional" 23.7600 "Provisional"
2022-01-10 28.4200 "Provisional" 28.4200 "Provisional"
2022-01-11 31.1700 "Provisional" 31.1700 "Provisional"
2022-01-12 35.0000 "Provisional" 35.0000 "Provisional"
2022-01-13 37.0800 "Provisional" 37.0800 "Provisional"
2022-01-14 37.5000 "Provisional" 37.5000 "Provisional"
2022-01-15 28.9600 "Provisional" 28.9600 "Provisional"
2022-01-16 33.8900 "Provisional" 33.8900 "Provisional"
2022-01-17 34.1200 "Provisional" 34.1200 "Provisional"
2022-01-18 37.7200 "Provisional" 37.7200 "Provisional"
2022-01-19 22.1800 "Provisional" 22.1800 "Provisional"
2022-01-20 20.8100 "Provisional" 20.8100 "Provisional"
2022-01-21 33.5400 "Provisional" 33.5400 "Provisional"
2022-01-22 33.2400 "Provisional" 33.2400 "Provisional"
2022-01-23 34.4300 "Provisional" 34.4300 "Provisional"
2022-01-24 34.0600 "Provisional" 34.0600 "Provisional"
2022-01-25 25.1800 "Provisional" 25.1800 "Provisional"
2022-01-26 18.5400 "Provisional" 18.5400 "Provisional"
2022-01-27 22.3300 "Provisional" 22.3300 "Provisional"
2022-01-28 22.3500 "Provisional" 22.3500 "Provisional"
2022-01-29 28.7000 "Provisional" 28.7000 "Provisional"
2022-01-30 29.2500 "Provisional" 29.2500 "Provisional"
2022-01-31 34.5500 "Provisional" 34.5500 "Provisional"
2022-02-01 24.9500 "Provisional" 24.9500 "Provisional"
2022-02-02 7.8300 "Provisional" 7.8300 "Provisional"
2022-02-03 -0.1400 "Provisional" -0.1400 "Provisional"
2022-02-04 16.0300 "Provisional" 16.0300 "Provisional"
2022-02-05 33.9000 "Provisional" 33.9000 "Provisional"
2022-02-06 30.8000 "Provisional" 30.8000 "Provisional"
2022-02-07 31.2200 "Provisional" 31.2200 "Provisional"
2022-02-08 43.0700 "Provisional" 43.0700 "Provisional"
2022-02-09 35.4600 "Provisional" 35.4600 "Provisional"
2022-02-10 38.6200 "Provisional" 38.6200 "Provisional"
2022-02-11 32.1200 "Provisional" 32.1200 "Provisional"
2022-02-12 24.7200 "Provisional" 24.7200 "Provisional"
2022-02-13 36.1700 "Provisional" 36.1700 "Provisional"
2022-02-14 35.8600 "Provisional" 35.8600 "Provisional"
2022-02-15 39.6000 "Provisional" 39.6000 "Provisional"
2022-02-16 27.1400 "Provisional" 27.1400 "Provisional"
2022-02-17 19.9600 "Provisional" 19.9600 "Provisional"
2022-02-18 29.0900 "Provisional" 29.0900 "Provisional"
2022-02-19 37.4400 "Provisional" 37.4400 "Provisional"
2022-02-20 49.1000 "Provisional" 49.1000 "Provisional"
2022-02-21 25.7900 "Provisional" 25.7900 "Provisional"
2022-02-22 1.9700 "Provisional" 1.9700 "Provisional"
2022-02-23 1.9300 "Provisional" 1.9300 "Provisional"
2022-02-24 8.3400 "Provisional" 8.3400 "Provisional"
2022-02-25 14.7600 "Provisional" 14.7600 "Provisional"
2022-02-26 20.1600 "Provisional" 20.1600 "Provisional"
2022-02-27 32.8000 "Provisional" 32.8000 "Provisional"
2022-02-28 43.4500 "Provisional" 43.4500 "Provisional"
2022-03-01 49.4800 "Provisional" 49.4800 "Provisional"
2022-03-02 50.3300 "Provisional" 50.3300 "Provisional"
2022-03-03 50.1800 "Provisional" 50.1800 "Provisional"
2022-03-04 46.6700 "Provisional" 46.6700 "Provisional"
2022-03-05 31.5700 "Provisional" 31.5700 "Provisional"
2022-03-06 21.3000 "Provisional" 21.3000 "Provisional"
2022-03-07 22.7500 "Provisional" 22.7500 "Provisional"
2022-03-08 28.2200 "Provisional" 28.2200 "Provisional"
2022-03-09 13.3700 "Provisional" 13.3700 "Provisional"
2022-03-10 8.5900 "Provisional" 8.5900 "Provisional"
2022-03-11 17.4500 "Provisional" 17.4500 "Provisional"
2022-03-12 37.5600 "Provisional" 37.5600 "Provisional"
2022-03-13 45.4600 "Provisional" 45.4600 "Provisional"
2022-03-14 45.5300 "Provisional" 45.5300 "Provisional"
